/*
 * FrmDepositoRetiro.java
 */
package presentacion;

import dtos.CuentaDTO;
import negocio.Datos;
import dtos.OperacionDTO;
import dtos.Usuario;
import enumeradores.AccionCatalogoEnumerador;
import static enumeradores.AccionCatalogoEnumerador.*;
import java.awt.event.KeyEvent;
import java.security.MessageDigest;
import java.security.NoSuchAlgorithmException;
import java.text.NumberFormat;
import java.util.List;
import java.util.Locale;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import negocio.IClienteNegocio;
import negocio.ICuentaNegocio;
import negocio.IOperacionNegocio;
import negocio.NegocioException;

/**
 * Esta clase representa una ventana de interfaz de usuario para realizar
 * depósitos o retiros.
 *
 * @author Juventino López García
 * @author Diego Valenzuela Parra
 */
public class FrmDepositoRetiro extends javax.swing.JFrame {

    Datos datos;
    Usuario usuario;
    IClienteNegocio clienteNegocio;
    ICuentaNegocio cuentaNegocio;
    IOperacionNegocio operacionNegocio;
    AccionCatalogoEnumerador accion;

    /**
     * Método constructor
     * 
     * @param datos el objeto de datos de la aplicación
     * @param usuario el usuario actual de la aplicación
     * @param accion la acción a realizar (depósito o retiro)
     */
    public FrmDepositoRetiro(Datos datos, Usuario usuario, AccionCatalogoEnumerador accion) {
        initComponents();
        this.datos = datos;
        this.usuario = usuario;
        this.clienteNegocio = datos.getClienteNegocio();
        this.cuentaNegocio = datos.getCuentaNegocio();
        this.operacionNegocio = datos.getOperacionNegocio();
        this.accion = accion;

        if (accion == DEPOSITO) {
            lblTitulo.setText("Depósito");
            lblSubtitulo.setText("Realiza un depósito a una de tus cuentas.");
            btnAccion.setText("Depositar");
        } else {
            lblTitulo.setText("Retiro");
            lblSubtitulo.setText("Realiza un retiro a una de tus cuentas.");
            btnAccion.setText("Retirar");
        }

        obtenerCuentas();
    }

    /**
     * Método para obtener las cuentas del cliente y mostrarlas en un ComboBox.
     */
    private void obtenerCuentas() {
        try {
            List<CuentaDTO> listaCuentasDTO = cuentaNegocio.obtenerCuentas(usuario.getCliente().getId());
            DefaultComboBoxModel<CuentaDTO> modelo = new DefaultComboBoxModel<>();
            for (CuentaDTO cuenta : listaCuentasDTO) {
                modelo.addElement(cuenta);
            }
            comboCuentas.setModel(modelo);
            CuentaDTO primerElemento = (CuentaDTO) comboCuentas.getSelectedItem();
            String saldoFormateado = formatearSaldo(Float.parseFloat(primerElemento.getSaldo()));
            txtSaldo.setText(saldoFormateado);
        } catch (NegocioException ex) {
            Logger.getLogger(FrmCancelarCuenta.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    /**
     * Formatea el saldo en formato de moneda.
     *
     * @param saldo el saldo a formatear
     * @return una cadena que representa el saldo formateado en formato de
     * moneda
     */
    private String formatearSaldo(float saldo) {
        NumberFormat formatter = NumberFormat.getCurrencyInstance(Locale.US);
        String saldoFormateado = formatter.format(saldo);
        return saldoFormateado;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnAccion = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        btnCancelar = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        lblTitulo = new javax.swing.JLabel();
        lblSubtitulo = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        comboCuentas = new javax.swing.JComboBox<>();
        txtMonto = new javax.swing.JTextField();
        pwdContrasenia = new javax.swing.JPasswordField();
        jLabel6 = new javax.swing.JLabel();
        txtSaldo = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        btnAccion.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        btnAccion.setText("Acción");
        btnAccion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAccionActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel4.setText("Contraseña:");

        btnCancelar.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        btnCancelar.setText("Cancelar");
        btnCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel5.setText("Cuenta:");

        lblTitulo.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        lblTitulo.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblTitulo.setText("Acción");

        lblSubtitulo.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lblSubtitulo.setText("Realiza un depósito a una de tus cuentas.");

        jLabel2.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel2.setText("Monto ($):");

        comboCuentas.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        comboCuentas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboCuentasActionPerformed(evt);
            }
        });

        txtMonto.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        txtMonto.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtMontoKeyTyped(evt);
            }
        });

        pwdContrasenia.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N

        jLabel6.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel6.setText("Saldo:");

        txtSaldo.setEditable(false);
        txtSaldo.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(lblSubtitulo)
                .addGap(95, 95, 95))
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtSaldo))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(btnCancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnAccion))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(pwdContrasenia))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtMonto))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(comboCuentas, javax.swing.GroupLayout.PREFERRED_SIZE, 339, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(20, Short.MAX_VALUE))
            .addComponent(lblTitulo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblTitulo)
                .addGap(3, 3, 3)
                .addComponent(lblSubtitulo)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(comboCuentas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(txtSaldo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtMonto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(pwdContrasenia, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAccion)
                    .addComponent(btnCancelar))
                .addContainerGap(20, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    /**
     * Verifica la contraseña ingresada por el usuario y, si es correcta,
     * realiza la acción correspondiente (depósito o retiro) en la cuenta
     * seleccionada. Luego, guarda la operación correspondiente y muestra un
     * mensaje de éxito con los detalles de la transacción. Por último, crea una
     * nueva instancia de FrmMenu, la hace visible y cierra la ventana actual.
     *
     * @param evt el evento de acción
     */
    private void btnAccionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAccionActionPerformed
        String contrasenia = "";
        try {
            contrasenia = clienteNegocio.obtenerContrasenia(usuario.getCliente().getId());
        } catch (NegocioException ex) {
            Logger.getLogger(FrmDepositoRetiro.class.getName()).log(Level.SEVERE, null, ex);
        }

        if (contrasenia.equals(pwdContrasenia.getText())) {
            try {
                CuentaDTO cuentaDTO = (CuentaDTO) comboCuentas.getSelectedItem();
                cuentaDTO.setSaldo(txtMonto.getText());
                String tipo;
                if (accion == DEPOSITO) {
                    cuentaNegocio.editar(cuentaDTO, DEPOSITO);
                    tipo = "Depósito";
                } else {
                    cuentaNegocio.editar(cuentaDTO, RETIRO);
                    tipo = "Retiro";
                }
                OperacionDTO operacionDTO = new OperacionDTO();
                operacionDTO.setMonto(txtMonto.getText());
                operacionDTO.setTipo(tipo);
                operacionDTO.setNumCuentaOrigen(cuentaDTO.getNumCuenta());
                operacionNegocio.guardar(operacionDTO);
                cuentaDTO = cuentaNegocio.buscarCuenta(cuentaDTO.getNumCuenta());
                JOptionPane.showMessageDialog(this, "Depósito exitoso.\nNúmero de cuenta: " + cuentaDTO.getNumCuenta()
                        + "\nSaldo actualizado: " + cuentaDTO.getSaldo(), "¡Éxito!", JOptionPane.INFORMATION_MESSAGE);
                FrmMenu frmMenu = new FrmMenu(datos, usuario);
                frmMenu.setVisible(true);
                dispose();
            } catch (NegocioException ex) {
                Logger.getLogger(FrmAbrirCuenta.class.getName()).log(Level.SEVERE, null, ex);
            }
        } else {
            System.out.println("Contraseña errónea.");
        }
    }//GEN-LAST:event_btnAccionActionPerformed

    /**
     * Crea una nueva instancia de FrmMenu, la hace visible y cierra la ventana
     * actual.
     *
     * @param evt el evento de acción
     */
    private void btnCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarActionPerformed
        FrmMenu frmMenu = new FrmMenu(datos, usuario);
        frmMenu.setVisible(true);
        dispose();
    }//GEN-LAST:event_btnCancelarActionPerformed

    private void comboCuentasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboCuentasActionPerformed
        CuentaDTO cuentaDTO = (CuentaDTO) comboCuentas.getSelectedItem();
        String saldoFormateado = formatearSaldo(Float.parseFloat(cuentaDTO.getSaldo()));
        txtSaldo.setText(saldoFormateado);
    }//GEN-LAST:event_comboCuentasActionPerformed

    /**
     * Actualiza el campo de texto "Saldo" con el saldo de la cuenta
     * seleccionada.
     *
     * @param evt el evento de acción
     */
    private void txtMontoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtMontoKeyTyped
        char c = evt.getKeyChar();
        if (((c < '0') || (c > '9')) && (c != KeyEvent.VK_BACK_SPACE)) {
            evt.consume();
        }
    }//GEN-LAST:event_txtMontoKeyTyped

//    /**
//     * @param args the command line arguments
//     */
//    public static void main(String args[]) {
//        /* Set the Nimbus look and feel */
//        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
//        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
//         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
//         */
//        try {
//            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
//                if ("Nimbus".equals(info.getName())) {
//                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
//                    break;
//                }
//            }
//        } catch (ClassNotFoundException ex) {
//            java.util.logging.Logger.getLogger(FrmDepositoRetiro.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (InstantiationException ex) {
//            java.util.logging.Logger.getLogger(FrmDepositoRetiro.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (IllegalAccessException ex) {
//            java.util.logging.Logger.getLogger(FrmDepositoRetiro.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
//            java.util.logging.Logger.getLogger(FrmDepositoRetiro.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        }
//        //</editor-fold>
//        //</editor-fold>
//        //</editor-fold>
//        //</editor-fold>
//
//        /* Create and display the form */
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
//                new FrmDepositoRetiro().setVisible(true);
//            }
//        });
//    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAccion;
    private javax.swing.JButton btnCancelar;
    private javax.swing.JComboBox<CuentaDTO> comboCuentas;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel lblSubtitulo;
    private javax.swing.JLabel lblTitulo;
    private javax.swing.JPasswordField pwdContrasenia;
    private javax.swing.JTextField txtMonto;
    private javax.swing.JTextField txtSaldo;
    // End of variables declaration//GEN-END:variables
}
